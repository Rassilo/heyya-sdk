/**
 * HeyaAppLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.UsersController;
const UserModel = testerlib.UserModel;
const UserPaginationModel = testerlib.UserPaginationModel;
const UserCreateModel = testerlib.UserCreateModel;
const RoleEnum = testerlib.RoleEnum;
const UserUpdateModel = testerlib.UserUpdateModel;
const UserUpdatePasswordModel = testerlib.UserUpdatePasswordModel;

describe("UsersController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Testcase for testing endpoint UsersController_getUsers
     */
    it("should testTestUsersControllerGetUsers response", function testTestUsersControllerGetUsersTest(done) {
        // parameters for the API call
        let limit = null;
        let page = null;

        controller.getUsersControllerGetUsers(limit, page, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            done();
        }).catch(() => undefined);
    });

    /**
     * Testcase for testing endpoint UsersController_getSearchUsers
     */
    it("should testTestUsersControllerGetSearchUsers response", function testTestUsersControllerGetSearchUsersTest(done) {
        // parameters for the API call
        let limit = null;
        let page = null;

        controller.getUsersControllerGetSearchUsers(limit, page, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            done();
        }).catch(() => undefined);
    });

    /**
     * Testcase for testing endpoint UsersController_getUsersByName
     */
    it("should testTestUsersControllerGetUsersByName response", function testTestUsersControllerGetUsersByNameTest(done) {
        controller.getUsersControllerGetUsersByName(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        }).catch(() => undefined);
    });

    /**
     * Testcase for testing endpoint UsersController_getMyProfile
     */
    it("should testTestUsersControllerGetMyProfile response", function testTestUsersControllerGetMyProfileTest(done) {
        controller.getUsersControllerGetMyProfile(function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            // test headers
            let headers = [];
            headers['Content-Type'] = 'application/json';
            assert.isTrue(TestHelper.areHeadersProperSubsetOf(headers, context.response.headers, true));
            done();
        }).catch(() => undefined);
    });

});
